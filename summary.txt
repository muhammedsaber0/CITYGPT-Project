his project integrates AI, traffic simulation, and geospatial analytics into a seamless system powered by Gemini, A/B Street, and FastAPI. The simulator.py script provides core backend functionality—extracting structured trip information from natural language using Gemini AI, geocoding place names via OpenStreetMap's Nominatim API, saving trip scenarios in A/B Street-compatible JSON format, and running headless traffic simulations with optional road closures. It also fetches key simulation metrics (e.g., travel times, throughput) and stores the results in a PostgreSQL database for later analysis.

Meanwhile, main.py serves as the web backend using FastAPI. It exposes two main HTTP endpoints for frontend interaction. The first endpoint, /generate-scenario, takes a user’s natural language request (e.g., “I want to bike from home to the library”), invokes Gemini to structure the trip, geocodes the locations, builds and saves a scenario, and triggers a simulation to return road usage data. The second endpoint, /simulate-with-blocked-roads, takes selected road IDs to be blocked, modifies the scenario accordingly, reruns the simulation, collects trip metrics, and logs everything in the database. The entire system supports dynamic and interactive traffic planning, enabling users to evaluate real-world mobility scenarios through a conversational chatbot interface connected to robust simulation and data layers.